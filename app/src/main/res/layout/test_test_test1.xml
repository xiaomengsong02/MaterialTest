<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#f4f4f4">

    <!-- 顶部导航栏 -->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/appBar"
        android:layout_width="match_parent"
        android:layout_height="250dp"
        >

        <!--app:contentScrim设置折叠时工具栏布局的颜色，默认contentScrim是colorPrimary的色值
        app:statusBarScrim设置折叠时状态栏的颜色，statusBarScrim是colorPrimaryDark的色值。-->
        <!--app:layout_scrollFlags:
        设置滚动表现：
        1、 Scroll, 表示手指向上滑动的时候,CollapsingToolbarLayout也会向上滚出屏幕并且消失，这个属性必须要有。
        2、 exitUntilCollapsed, 表示这个layout会一直滚动离开屏幕范围,直到它收折成它的最小高度。不再移出屏幕-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:contentScrim="@color/nav_bg"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">

            <!-- 这里可以是一张图片或布局 -->
            <!--app:layout_collapseMode="parallax"设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，实现视差滚动效果, 通常和layout_collapseParallaxMultiplier(设置视差因子，值为0~1)搭配使用。-->
            <!--给layout_collapseParallaxMultiplier设置的值越大可以让滚动的效果更加明显。-->
            <!--android:layout_marginTop="@dimen/nav_height"-->
            <LinearLayout
                android:id="@+id/head_layout"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:orientation="vertical"
                android:background="@color/nav_bg"
                app:layout_collapseMode="parallax"
                app:layout_collapseParallaxMultiplier="0.8"
                android:layout_marginTop="@dimen/nav_height"
                android:padding="8dp">
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="这里是自定义的布局，可以随意布局。需要注意设置android:layout_marginTop的值是toolbar的高度值，否则就会被挡住一部分。\n还有就是ToolBar的title需要在代码中设置。"
                    android:textColor="#ffffff"
                    android:textSize="16sp"
                    android:textStyle="bold" />
            </LinearLayout>

            <!--app:layout_collapseMode="pin" 在view折叠的时候Toolbar仍然被固定在屏幕的顶部。-->
            <!-- 这里只是放一个Toolbar，不做任何处理 -->
            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar_base"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:minHeight="@dimen/nav_height"
                android:background="@color/nav_bg"
                app:contentInsetStart="0dp"
                app:contentInsetStartWithNavigation="0dp"
                app:layout_collapseMode="pin"
                />

        </android.support.design.widget.CollapsingToolbarLayout>

    </android.support.design.widget.AppBarLayout>
    <!--中间滚动区域-->
    <!--app:layout_behavior="@string/appbar_scrolling_view_behavior"是一个系统字符串，值为：android.support.design.widget.AppBarLayout$ScrollingViewBehavior的常量值。
    唯一的作用是把自己（使用者）放到AppBarLayout的下面。（不能理解为什么叫ScrollingViewBehavior）所有View都能使用这个Behavior。-->
    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"
        >

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#ffffff"
                android:layout_margin="10dp"
                app:cardCornerRadius="5dp">
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="卡片式布局"
                    android:textSize="20sp"
                    android:layout_margin="20dp"/>
            </android.support.v7.widget.CardView>

            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#ffffff"
                android:layout_margin="10dp"
                app:cardCornerRadius="5dp">
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="卡片式布局"
                    android:textSize="20sp"
                    android:layout_margin="20dp"/>
            </android.support.v7.widget.CardView>

            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#ffffff"
                android:layout_margin="10dp"
                app:cardCornerRadius="5dp">
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="卡片式布局"
                    android:textSize="20sp"
                    android:layout_margin="20dp"/>
            </android.support.v7.widget.CardView>


            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#ffffff"
                android:layout_margin="10dp"
                app:cardCornerRadius="5dp">
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="卡片式布局"
                    android:textSize="20sp"
                    android:layout_margin="20dp"/>
            </android.support.v7.widget.CardView>


            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#ffffff"
                android:layout_margin="10dp"
                app:cardCornerRadius="5dp">
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="卡片式布局"
                    android:textSize="20sp"
                    android:layout_margin="20dp"/>
            </android.support.v7.widget.CardView>

        </LinearLayout>

    </android.support.v4.widget.NestedScrollView>

</android.support.design.widget.CoordinatorLayout>