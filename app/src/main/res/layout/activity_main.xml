<?xml version="1.0" encoding="utf-8"?>

<android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--第一个控件用于作为 主屏幕中显示的内容-->
    <!--CoordinatorLayout加强版的帧布局, 作用是，可以自动调整控件的位置-->
    <android.support.design.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!--AppBarLayout实际上是一个垂直方向的线性布局，作用：解决滚动控件在帧布局中遮挡住标题栏的问题-->
        <!--将Toolbar嵌套到AppBarLayout布局中，然后给滚动控件指定一个布局行为-->
        <android.support.design.widget.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <!--标题栏-->
            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/colorPrimary"
                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                app:layout_scrollFlags="scroll|enterAlways|snap"
                />
            <!--scroll:表示当RecyclerView向上滚动的时候，Toolbar一起向上滚动并隐藏-->
            <!--enterAlways:表示R..向下滚动，T...一起向下滚动并显示-->
            <!--snap:表示T..没有完全隐藏或显示的时候，根据当前距离自动选择隐藏还是显示-->
        </android.support.design.widget.AppBarLayout>

        <!--下拉刷新：把需要下拉刷新的控件包含进去就了-->
        <android.support.v4.widget.SwipeRefreshLayout
            android:id="@+id/swipe_refresh"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">
            <!-- 关于挡住标题栏的其中一个解决办法：-->
            <!-- android:layout_marginTop="?attr/actionBarSize" -->
            <!--或者使用 AppBarLayout ,使用就要加一个app:layout_behavior 设置布局行为-->

            <!--滚动控件-->
            <android.support.v7.widget.RecyclerView
                android:id="@+id/recycler_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                />

        </android.support.v4.widget.SwipeRefreshLayout>


        <!--悬浮按钮-->
        <android.support.design.widget.FloatingActionButton
            android:id="@+id/fab"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="bottom|end"
            android:layout_margin="16dp"
            android:src="@drawable/e5"
            android:elevation="8dp"/>
            <!--bottom:表示把控件放置在屏幕下边-->
            <!--end和之前的start用法一样，默认使用系统语言来指定放左边还是右边-->

    </android.support.design.widget.CoordinatorLayout>

    <!--第二个控件用于作为 滑动菜单中显示的内容-->
        <android.support.design.widget.NavigationView
            android:id="@+id/nav_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            app:menu="@menu/nav_menu"
            app:headerLayout="@layout/nav_header"/>

    <!-- android:layout_gravity="" 该属性必须指定，这是告诉DrawerLayout滑动菜单是在屏幕的左边还是右边-->
    <!-- 该属性有三个值：left表示滑动菜单在左边 、right表示滑动菜单在右边  -->
    <!--  start 表示会根据系统语言进行判断 ，语言是向左的，就显示左边，语言向右，就显示右边-->
    <!-- 比如英语和汉语，滑动菜单在左边。 比如阿拉伯语，滑动菜单就在右边 -->

</android.support.v4.widget.DrawerLayout>



